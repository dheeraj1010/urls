name: Deploy Spring Boot App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8.0.432'
          distribution: 'temurin'
          check-latest: false


      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
          enableCrossOsArchive: false
        continue-on-error: true

      - name: Build with Maven
        run: |
          mvn clean package -DskipTests
          echo "Build completed. Listing files in the target directory:"
          ls -l target/
          
          echo "Exact path of urls-0.0.1.jar:"
          realpath target/urls-0.0.1.jar

      - name: Transfer JAR to VPS
        run: |
          echo "${{ secrets.VPS_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no target/urls-0.0.1.jar ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/root/urlApp/
        shell: bash

#
#      - name: Deploy to VPS
#        uses: appleboy/ssh-action@v0.1.5
#        with:
#          host: ${{ secrets.VPS_HOST }}
#          username: ${{ secrets.VPS_USER }}
#          key: ${{ secrets.VPS_SSH_KEY }}
#          script: |
#
#
#
#
#            # Stop existing Java process
#            # echo 'Stopping existing Java process'
#            # pkill -f 'java -Dspring.profiles.active=prod -jar urls-0.0.1.jar' || true
#
#
#
#            # Start new Java process
#            # ls -l
#            nohup java -Dspring.profiles.active=prod -jar /root/urlApp/urls-0.0.1.jar > /root/urlApp/logfile.log 2>&1 &
#            sleep 10


      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            #!/bin/bash
            APP_NAME="urls-0.0.1.jar"
            APP_PATH="/root/urlApp/$APP_NAME"
            LOG_FILE="/root/urlApp/logfile.log"
            ERROR_LOG_FILE="/root/urlApp/error.log"
            
            log_message() {
              echo "$(date +'%Y-%m-%d %H:%M:%S') - $1" | tee -a $LOG_FILE
            }
            
            log_error() {
              echo "$(date +'%Y-%m-%d %H:%M:%S') - ERROR: $1" | tee -a $ERROR_LOG_FILE
            }
            
            stop_app() {
              log_message "Attempting to stop the application..."
              PID=$(pgrep -f "$APP_NAME")
              log_message "PID = $PID"
              if [ -n "$PID" ]; then
                log "I am in If Case Block"
                kill $PID
                while kill -0 $PID 2>/dev/null; do
                  log_message "Waiting for application to stop..."
                  sleep 1
                done
                log_message "Application stopped successfully."
              else
                log_message "No running application found with name $APP_NAME."
              fi
            }
            
            start_app() {
              log_message "Starting application..."
              nohup java -Dspring.profiles.active=prod -jar "$APP_PATH" > "$LOG_FILE" 2> "$ERROR_LOG_FILE" &
              log_message "Application started with PID $(cat $PID_FILE)."
            }
            
            deploy_app() {
              log_message "Deployment started."
              stop_app
              if [ $? -eq 0 ]; then
                log_message "Application stopped, proceeding to start a new instance."
                start_app
                if [ $? -eq 0 ]; then
                  log_message "Application deployed successfully."
                else
                  log_error "Failed to start the application."
                  exit 1
                fi
              else
                log_error "Failed to stop the application."
                exit 1
              fi
            }
            
            deploy_app

